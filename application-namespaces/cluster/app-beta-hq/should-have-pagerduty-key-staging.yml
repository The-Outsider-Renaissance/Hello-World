apiVersion: v1
kind: Namespace
metadata:
  name: should-have-pagerduty-key-staging
  labels:
    powerapp.cloud/global-registry-access: 'yes'
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: should-have-pagerduty-key-staging
imagePullSecrets:
  - name: image-registry-prod-robot-powerhome
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: deployment-access
  namespace: should-have-pagerduty-key-staging
subjects:
- kind: Group
  name: softwareDelivery
  apiGroup: rbac.authorization.k8s.io
- kind: ServiceAccount
  name: milano
  namespace: milano-production
roleRef:
  kind: ClusterRole
  name: global:deployer
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: compute-resources
  namespace: should-have-pagerduty-key-staging
spec:
  hard:
    pods: "50"
    requests.cpu: "2"
    requests.memory: "2Gi"
    requests.ephemeral-storage: "300Mi"
    limits.cpu: "2"
    limits.memory: "2Gi"
    limits.ephemeral-storage: "300Mi"
    configmaps: "40"
    requests.storage: "5Gi"
    persistentvolumeclaims: "20"
    replicationcontrollers: "0"
    secrets: "50"
    services: "30"
    services.loadbalancers: "0"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: default-resources
  namespace: should-have-pagerduty-key-staging
spec:
  limits:
  - type: Container
    default:
      cpu: 100m
      memory: 100Mi
      ephemeral-storage: 100Mi
    defaultRequest:
      cpu: 100m
      memory: 100Mi
      ephemeral-storage: 100Mi
---
apiVersion: v1
kind: Secret
metadata:
  name: pagerduty-key-should-have-pagerduty-key-staging
  namespace: should-have-pagerduty-key-staging
type: Opaque
stringData:
  key: 
---  
apiVersion: monitoring.coreos.com/v1alpha1
kind: AlertmanagerConfig
metadata:
  name: should-have-pagerduty-key-staging
  namespace: should-have-pagerduty-key-staging
  labels:
    alertmanager: monitoring
spec:
  route:
    groupBy:
      - alertname
      - container
      - pod
      - statefulset
      - replicaset
      - daemonset
      - deployment
      - namespace
      - targetName
      - persistentvolumeclaim
    groupWait: 30s
    groupInterval: 1m
    repeatInterval: 5m
    receiver: 'pagerduty-should-have-pagerduty-key-staging'
    continue: false
  receivers:
  - name: pagerduty-should-have-pagerduty-key-staging
    pagerdutyConfigs:
      - url: https://events.pagerduty.com/v2/enqueue
        severity: '{{ if .CommonLabels.severity }}{{ .CommonLabels.severity | toLower }}{{ else }}critical{{ end }}'
        description:
          '[{{ .CommonLabels.cluster }}/{{ .GroupLabels.alertname }}] {{ .CommonAnnotations.description }}'
        routingKey:
          key: key
          name: pagerduty-key-should-have-pagerduty-key-staging
